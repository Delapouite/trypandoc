{"text":"---\ntitle: Code with syntax highlighting\nlang: en-US\n...\n\nHere's some code with syntax highlighting:\n\n``` haskell\n-- | Inefficient quicksort in haskell.\nqsort :: (Enum a) => [a] -> [a]\nqsort []     = []\nqsort (x:xs) = qsort (filter (< x) xs) ++ [x] ++\n               qsort (filter (>= x) xs) \n```\n\nTry changing the highlighting style to see what effect this has.\n\nHere's some python, with numbered lines:\n\n``` python {.numberLines}\nclass FSM(object):\n\n\"\"\"This is a Finite State Machine (FSM).\n\"\"\"\n\ndef __init__(self, initial_state, memory=None):\n\n    \"\"\"This creates the FSM. You set the initial state here. The \"memory\"\n    attribute is any object that you want to pass along to the action\n    functions. It is not used by the FSM. For parsing you would typically\n    pass a list to be used as a stack. \"\"\"\n\n    # Map (input_symbol, current_state) --> (action, next_state).\n    self.state_transitions = {}\n    # Map (current_state) --> (action, next_state).\n    self.state_transitions_any = {}\n    self.default_transition = None\n    ...\n```\n","to":"html","from":"markdown","standalone":true,"embed-resources":false,"table-of-contents":false,"number-sections":false,"citeproc":false,"html-math-method":"plain","wrap":"preserve","highlight-style":"kate","files":{},"template":null}