{"text":".TP\n\\f[C]-L\\f[R] \\f[I]SCRIPT\\f[R], \\f[C]--lua-filter=\\f[R]\\f[I]SCRIPT\\f[R]\nTransform the document in a similar fashion as JSON filters (see\n\\f[C]--filter\\f[R]), but use pandoc\\[cq]s built-in Lua filtering system.\nThe given Lua script is expected to return a list of Lua filters which\nwill be applied in order.\nEach Lua filter must contain element-transforming functions indexed by\nthe name of the AST element on which the filter function should be\napplied.\n.RS\n.PP\nThe \\f[C]pandoc\\f[R] Lua module provides helper functions for element\ncreation.\nIt is always loaded into the script\\[cq]s Lua environment.\n.PP\nSee the Lua filters documentation for further details.\n.PP\nIn order of preference, pandoc will look for Lua filters in\n.IP \"1.\" 3\na specified full or relative path,\n.IP \"2.\" 3\n\\f[C]$DATADIR/filters\\f[R] where \\f[C]$DATADIR\\f[R] is the user data\ndirectory (see \\f[C]--data-dir\\f[R], above).\n.PP\nFilters, Lua filters, and citeproc processing are applied in the order\nspecified on the command line.\n.RE\n.TP\n\\f[C]-M\\f[R] \\f[I]KEY\\f[R][\\f[C]=\\f[R]\\f[I]VAL\\f[R]], \\f[C]--metadata=\\f[R]\\f[I]KEY\\f[R][\\f[C]:\\f[R]\\f[I]VAL\\f[R]]\nSet the metadata field \\f[I]KEY\\f[R] to the value \\f[I]VAL\\f[R].\nA value specified on the command line overrides a value specified in the\ndocument using YAML metadata blocks.\nValues will be parsed as YAML boolean or string values.\nIf no value is specified, the value will be treated as Boolean true.\nLike \\f[C]--variable\\f[R], \\f[C]--metadata\\f[R] causes template\nvariables to be set.\nBut unlike \\f[C]--variable\\f[R], \\f[C]--metadata\\f[R] affects the\nmetadata of the underlying document (which is accessible from filters\nand may be printed in some output formats) and metadata values will be\nescaped when inserted into the template.","from":"man","to":"context"}
